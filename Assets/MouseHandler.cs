//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System.Collections;

enum Mode {
	OPEN,
	OBJECT,
	WALL
};

public class MouseHandler : MonoBehaviour {
	
	Object trapBase;
	Object trapGhost;
	GameObject trapClone;
	
	float location_temp;
	static int layermask = 1023;
	static float vOffset = 0.2f;

	static int wSize = 5;
	static float wOffset = wSize / 2.0f;

	Mode mMode = Mode.OPEN;
	
	// Use this for initialization
	void Start () {
		trapBase = Resources.Load ("Prefabs/SpikePitPrefab 1");
		trapGhost = Resources.Load ("Prefabs/SpikePitGhost");
	}
	
	// Update is called once per frame
	void Update () {

		Ray ray;
		RaycastHit hit;
		Vector3 terrainHit;

		if (mMode == Mode.OBJECT) {
			// Hold the left mouse button to drag the trap
			if (Input.GetButton ("Fire1")) {
				ray = Camera.main.ScreenPointToRay (Input.mousePosition);
			
				if (Physics.Raycast (ray, out hit, 200, layermask) && hit.collider.name == "Terrain") {
					terrainHit = hit.point;
					terrainHit.y += vOffset;
					terrainHit = WorldToGrid(terrainHit);
					trapClone.transform.Translate (terrainHit - trapClone.transform.position);
				}
			}
		
			// Release the mouse button to set the trap
			if (Input.GetButtonDown ("Fire1")) {
				ray = Camera.main.ScreenPointToRay (Input.mousePosition);
			
				if (Physics.Raycast (ray, out hit, 200, layermask) && hit.collider.name == "Terrain") {
				
					terrainHit = hit.point;
					terrainHit.y += vOffset;

					terrainHit = WorldToGrid(terrainHit);
				
					trapClone.transform.Translate (terrainHit - trapClone.transform.position);
					Object.Destroy (trapClone, 0.5f);
					trapClone = null;
				
					Instantiate (trapBase, terrainHit, Quaternion.identity);
				
					mMode = Mode.OPEN;
					Debug.Log ("Trap Placed");
				}
			}
		}
	}

	/*Stolen and modified from the Wallmanager. A temporary fix.*/
	static Vector3 WorldToGrid(Vector3 input) {
		Vector3 output = new Vector3(0,0,0);
		
		output.x = (Mathf.FloorToInt(input.x)) / wSize;
		output.y = input.y;
		output.z = (Mathf.FloorToInt(input.z)) / wSize;
		
		return output;
	}

	void AttachObject(GameObject obj) {
		Ray ray;
		RaycastHit hit;
		Vector3 terrainHit;

		// Creates a ray from the camera through the cursor
		ray = Camera.main.ScreenPointToRay(Input.mousePosition);
		
		// If the ray hits the terrain, create a trap on the terrain.
		if (Physics.Raycast (ray, out hit, 200, layermask) && hit.collider.name == "Terrain") {
			terrainHit = hit.point;
			terrainHit.y += vOffset;
			terrainHit = WorldToGrid(terrainHit);
			trapClone = (GameObject) Instantiate(trapGhost, hit.point, Quaternion.identity);
		}

		mMode = Mode.OBJECT;
	}
}





